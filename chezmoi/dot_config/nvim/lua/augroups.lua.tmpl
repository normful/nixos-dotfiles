local nvim_create_augroup = vim.api.nvim_create_augroup
local nvim_create_autocmd = vim.api.nvim_create_autocmd

local function create_map_command(key, command)
  return string.format([[map <buffer> %s %s]], key, command)
end

-- TODO: Clean up the `group` usage here
-- TODO: Clean up autocmd events specified here

local help_augroup = nvim_create_augroup('help_augroup', { clear = true })
nvim_create_autocmd({ 'BufEnter', 'BufWinEnter' }, {
  pattern = { '*.txt' },
  group = help_augroup,
  command = create_map_command('<C-i>', '<C-]>'),
  desc = 'Map Ctrl-i (Wezterm sends on Cmd-i) to Ctrl-] in help files',
})

local env_augroup = nvim_create_augroup('env_augroup', { clear = true })
nvim_create_autocmd({ 'BufEnter', 'BufWinEnter' }, {
  pattern = '*.env',
  group = env_augroup,
  command = [[set filetype=config]],
  desc = 'Set filetype for .env files',
})

nvim_create_augroup('quickfix_augroup', { clear = true })
nvim_create_autocmd('FileType', {
  pattern = 'qf',
  group = 'quickfix_augroup',
  command = [[setlocal wrap]],
  desc = 'Enable wrapping in quickfix window',
})

nvim_create_augroup('git_augroup', { clear = true })
nvim_create_autocmd('FileType', {
  pattern = 'gitcommit',
  group = 'git_augroup',
  command = [[setlocal textwidth=80 colorcolumn+=80 spell spelllang=en_us]],
  desc = 'Settings for gitcommit files',
})
nvim_create_autocmd('FileType', {
  pattern = 'gitrebase',
  group = 'git_augroup',
  command = [[setlocal textwidth=80 colorcolumn+=80 nospell]],
  desc = 'Settings for gitrebase files',
})

local markdown_augroup = nvim_create_augroup('markdown_augroup', { clear = true })
nvim_create_autocmd({ 'BufEnter', 'BufWinEnter', 'FileType' }, {
  pattern = { '*.md', '*.rmd', '*.markdown' },
  group = markdown_augroup,
  callback = function (ev)
    vim.opt.spell = false
    vim.opt.autowriteall = true

    -- At some point, I thought it was better to not use nvim-ufo for folding in Markdown
    -- require("ufo").detach()
    -- But it seems like nvim-ufo is better than the other alternatives, so I'm sticking with it.

    local buf_num = ev.buf

    vim.api.nvim_buf_set_keymap(buf_num, 'n', 'mi', '<Cmd>MakeItalic<CR>', { desc = 'Make italic', noremap = true, silent = true })
    vim.api.nvim_buf_set_keymap(buf_num, 'n', 'mb', '<Cmd>MakeBold<CR>', { desc = 'Make bold', noremap = true, silent = true })

    vim.api.nvim_buf_set_keymap(buf_num, 'n', '<Leader>k', '<Cmd>NormfulInsertLink<CR>', { desc = 'Insert link (to copied URL or local note)', noremap = true, silent = true })
    vim.api.nvim_buf_set_keymap(buf_num, 'v', '<Leader>k', '<Cmd>NormfulInsertLink<CR>', { desc = 'Insert link (to copied URL or local note)', noremap = true, silent = true })
  end,
})

nvim_create_augroup('javascript_augroup', { clear = true })
nvim_create_autocmd('FileType', {
  pattern = 'javascript',
  group = 'javascript_augroup',
  command = create_map_command('<Leader>r', '<Cmd>AsyncRun -mode=term -focus=1 -pos=right -cols=70 node %<CR>'),
  desc = 'Run this JS file with node',
})

nvim_create_augroup('typescript_augroup', { clear = true })
nvim_create_autocmd('FileType', {
  pattern = 'typescript',
  group = 'typescript_augroup',
  command = create_map_command('<Leader>r', '<Cmd>AsyncRun -mode=term -focus=1 -pos=right -cols=70 ts-node %<CR>'),
  desc = 'Run this TS file with ts-node',
})

{{ if eq .chezmoi.hostname "cyan" -}}
nvim_create_augroup('override_html_ft_augroup', { clear = true })
nvim_create_autocmd({ 'BufRead', 'BufNewFile' }, {
  pattern = '*.html',
  group = 'override_html_ft_augroup',
  command = [[set filetype=php]],
  desc = 'Override filetype for html to php',
})

nvim_create_augroup('override_inc_ft_augroup', { clear = true })
nvim_create_autocmd({ 'BufRead', 'BufNewFile' }, {
  pattern = '*.inc',
  group = 'override_inc_ft_augroup',
  command = [[set filetype=php]],
  desc = 'Override filetype for inc to php',
})
{{ end -}}
